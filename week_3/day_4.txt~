-------------------------------ALTER TABLE--------------------------------------------------------------------------
1. Add columns 'created_at' and 'updated_at' to the tables marks, students and medals.

ALTER TABLE marks
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
ADD COLUMN updated_at TIMESTAMP NOT NULL;

 desc marks;
+-------------+------------+------+-----+---------------------+----------------+
| Field       | Type       | Null | Key | Default             | Extra          |
+-------------+------------+------+-----+---------------------+----------------+
| id          | bigint(19) | NO   | PRI | NULL                | auto_increment |
| student_id  | bigint(19) | NO   | MUL | NULL                |                |
| subject_id  | bigint(19) | NO   |     | NULL                |                |
| quarterly   | int(11)    | YES  |     | NULL                |                |
| half_yearly | int(11)    | YES  |     | NULL                |                |
| annual      | int(11)    | YES  |     | NULL                |                |
| year        | int(11)    | YES  |     | NULL                |                |
| grade       | int(11)    | YES  |     | NULL                |                |
| created_at  | timestamp  | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at  | timestamp  | NO   |     | 0000-00-00 00:00:00 |                |
+-------------+------------+------+-----+---------------------+----------------+
10 rows in set (0.00 sec)

ALTER TABLE students
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
ADD COLUMN updated_at TIMESTAMP NOT NULL;

desc students;
+------------+--------------+------+-----+---------------------+----------------+
| Field      | Type         | Null | Key | Default             | Extra          |
+------------+--------------+------+-----+---------------------+----------------+
| id         | bigint(19)   | NO   | PRI | NULL                | auto_increment |
| name       | varchar(100) | YES  |     | NULL                |                |
| created_at | timestamp    | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at | timestamp    | NO   |     | 0000-00-00 00:00:00 |                |
+------------+--------------+------+-----+---------------------+----------------+
4 rows in set (0.00 sec)

ALTER TABLE medals
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
ADD COLUMN updated_at TIMESTAMP NOT NULL;

desc medals;
+------------+-------------+------+-----+---------------------+----------------+
| Field      | Type        | Null | Key | Default             | Extra          |
+------------+-------------+------+-----+---------------------+----------------+
| id         | bigint(19)  | NO   | PRI | NULL                | auto_increment |
| student_id | bigint(19)  | NO   | MUL | NULL                |                |
| game_id    | bigint(19)  | NO   |     | NULL                |                |
| medal_won  | varchar(10) | YES  |     | NULL                |                |
| year       | int(11)     | YES  |     | NULL                |                |
| grade      | int(11)     | YES  |     | NULL                |                |
| created_at | timestamp   | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at | timestamp   | NO   |     | 0000-00-00 00:00:00 |                |
+------------+-------------+------+-----+---------------------+----------------+
8 rows in set (0.00 sec)


2. Replace the null values in quarterly, half_yearly and annual columns with 0 and make those columns as not nullable.

UPDATE marks
SET quarterly =0 WHERE quarterly IS NULL;

UPDATE marks
SET half_yearly =0 WHERE half_yearly IS NULL;

UPDATE marks
SET annual =0 WHERE annual IS NULL;

ALTER TABLE marks
MODIFY COLUMN quarterly int NOT NULL DEFAULT 0,
MODIFY COLUMN half_yearly int NOT NULL DEFAULT 0,
MODIFY COLUMN annual int NOT NULL DEFAULT 0;

desc marks;
+-------------+------------+------+-----+---------------------+----------------+
| Field       | Type       | Null | Key | Default             | Extra          |
+-------------+------------+------+-----+---------------------+----------------+
| id          | bigint(19) | NO   | PRI | NULL                | auto_increment |
| student_id  | bigint(19) | NO   | MUL | NULL                |                |
| subject_id  | bigint(19) | NO   |     | NULL                |                |
| quarterly   | int(11)    | NO   |     | 0                   |                |
| half_yearly | int(11)    | NO   |     | 0                   |                |
| annual      | int(11)    | NO   |     | 0                   |                |
| year        | int(11)    | YES  |     | NULL                |                |
| grade       | int(11)    | YES  |     | NULL                |                |
| created_at  | timestamp  | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at  | timestamp  | NO   |     | 0000-00-00 00:00:00 |                |
+-------------+------------+------+-----+---------------------+----------------+
10 rows in set (0.00 sec)
-------------------------------Insert and update records into a table-------------------------------------------------------
1. While inserting the value of updated_at & created_at should be the current time
2. While updating the value of updated_at alone should be the time of update

alter table students
MODIFY created_at TIMESTAMP not null Default CURRENT_TIMESTAMP,
MODIFY updated_at TIMESTAMP not null default CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;
desc students;
+------------+--------------+------+-----+-------------------+-----------------------------+
| Field      | Type         | Null | Key | Default           | Extra                       |
+------------+--------------+------+-----+-------------------+-----------------------------+
| id         | bigint(19)   | NO   | PRI | NULL              | auto_increment              |
| name       | varchar(100) | YES  |     | NULL              |                             |
| created_at | timestamp    | NO   |     | CURRENT_TIMESTAMP |                             |
| updated_at | timestamp    | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |
+------------+--------------+------+-----+-------------------+-----------------------------+


INSERT INTO `students` VALUES (100045,'Thor',now(),now());
Query OK, 1 row affected (0.05 sec)

select * from students;
+--------+-------------+---------------------+---------------------+
| id     | name        | created_at          | updated_at          |
+--------+-------------+---------------------+---------------------+
| 100001 | Thor        | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100002 | Hulk        | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100003 | Daredevil   | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100004 | X Man       | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100005 | Ironman     | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100006 | Quicksilver | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100045 | Thor        | 2015-08-25 18:30:35 | 2015-08-25 18:30:35 |
+--------+-------------+---------------------+---------------------+
7 rows in set (0.00 sec)

UPDATE students SET name = 'thorium' where id = '100045';
Query OK, 1 row affected (0.06 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from students;
+--------+-------------+---------------------+---------------------+
| id     | name        | created_at          | updated_at          |
+--------+-------------+---------------------+---------------------+
| 100001 | Thor        | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100002 | Hulk        | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100003 | Daredevil   | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100004 | X Man       | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100005 | Ironman     | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100006 | Quicksilver | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |
| 100045 | thorium     | 2015-08-25 18:30:35 | 2015-08-25 18:32:28 |
+--------+-------------+---------------------+---------------------+
7 rows in set (0.00 sec)



---------------------------------------------EXERCISE------------------------------------------------------------------
1. This exercise uses the training sample database that was provided for the previous days.

Using the table training_sample, do the following
create a table students_summary with the below columns
student_id
student_name
year
percentage (got in annual exams)
no_of_medals_received

CREATE TABLE students_summary(
student_id bigint(19) NOT NULL,
student_name varchar(100) DEFAULT NULL,
year int(11) DEFAULT NULL,
percentage int,
no_of_medals_received int);

desc students_summary;
+-----------------------+--------------+------+-----+---------+-------+
| Field                 | Type         | Null | Key | Default | Extra |
+-----------------------+--------------+------+-----+---------+-------+
| student_id            | bigint(19)   | NO   | PRI | NULL    |       |
| student_name          | varchar(100) | YES  |     | NULL    |       |
| year                  | int(11)      | YES  |     | NULL    |       |
| percentage            | int(11)      | YES  |     | NULL    |       |
| no_of_medals_received | int(11)      | YES  |     | NULL    |       |
+-----------------------+--------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

2. Derive the values from the tables(students, marks and medals) and insert into the above table
Use insert with select statement

INSERT INTO students_summary
SELECT students.id, name, marks.year, avg(annual), count(medal_won)  
FROM (students LEFT JOIN marks ON students.id= marks.student_id)
LEFT JOIN medals ON students.id= medals.student_id AND marks.year= medals.year
WHERE subject_id=1
GROUP BY students.id, marks.year;

SELECT * 
FROM students_summary;
+------------+--------------+------+------------+-----------------------+
| student_id | student_name | year | percentage | no_of_medals_received |
+------------+--------------+------+------------+-----------------------+
|     100001 | Thor         | 2003 |         91 |                     1 |
|     100001 | Thor         | 2004 |         57 |                     0 |
|     100001 | Thor         | 2005 |         94 |                     3 |
|     100001 | Thor         | 2006 |         51 |                     0 |
|     100001 | Thor         | 2007 |          0 |                     0 |
|     100002 | Hulk         | 2003 |         77 |                     1 |
|     100002 | Hulk         | 2004 |         94 |                     3 |
|     100002 | Hulk         | 2005 |         50 |                     0 |
|     100002 | Hulk         | 2006 |         46 |                     0 |
|     100002 | Hulk         | 2007 |         79 |                     0 |
|     100003 | Daredevil    | 2003 |         95 |                     2 |
|     100003 | Daredevil    | 2004 |         97 |                     2 |
|     100003 | Daredevil    | 2005 |         73 |                     1 |
|     100003 | Daredevil    | 2006 |         31 |                     0 |
|     100003 | Daredevil    | 2007 |         69 |                     0 |
|     100004 | X Man        | 2003 |         65 |                     0 |
|     100004 | X Man        | 2004 |         68 |                     0 |
|     100004 | X Man        | 2005 |         97 |                     0 |
|     100004 | X Man        | 2006 |         82 |                     0 |
|     100004 | X Man        | 2007 |         76 |                     0 |
|     100005 | Ironman      | 2003 |        100 |                     0 |
|     100005 | Ironman      | 2004 |         47 |                     0 |
|     100005 | Ironman      | 2005 |         39 |                     0 |
|     100005 | Ironman      | 2006 |         70 |                     0 |
|     100005 | Ironman      | 2007 |         87 |                     0 |
+------------+--------------+------+------------+-----------------------+
25 rows in set (0.00 sec)

-----------------------------------------------------Triggers--------------------------------------------------------------------
1. Add a column average to the table marks. Write a trigger to calculate the average marks for the subject whenever any insert/update happens in the columns quarterly, half_yearly and annual in the table 'marks'.

ALTER TABLE marks
ADD COLUMN average int;

desc marks;
+-------------+------------+------+-----+---------------------+----------------+
| Field       | Type       | Null | Key | Default             | Extra          |
+-------------+------------+------+-----+---------------------+----------------+
| id          | bigint(19) | NO   | PRI | NULL                | auto_increment |
| student_id  | bigint(19) | NO   | MUL | NULL                |                |
| subject_id  | bigint(19) | NO   |     | NULL                |                |
| quarterly   | int(11)    | NO   |     | 0                   |                |
| half_yearly | int(11)    | NO   |     | 0                   |                |
| annual      | int(11)    | NO   |     | 0                   |                |
| year        | int(11)    | YES  |     | NULL                |                |
| grade       | int(11)    | YES  |     | NULL                |                |
| created_at  | timestamp  | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at  | timestamp  | NO   |     | 0000-00-00 00:00:00 |                |
| average     | int(11)    | YES  |     | NULL                |                |
+-------------+------------+------+-----+---------------------+----------------+
11 rows in set (0.00 sec)

DELIMITER $$

CREATE TRIGGER avg_trigger_insert before INSERT ON marks 
FOR EACH ROW
BEGIN
SET new.average=(new.annual+new.half_yearly+new.quarterly)/3;
END $$

CREATE TRIGGER avg_trigger_update before UPDATE ON marks 
FOR EACH ROW
BEGIN
SET new.average=(new.annual+new.half_yearly+new.quarterly)/3;
END $$

DELIMITER ;


-----------checking---
UPDATE marks
SET quarterly = 0 
WHERE id like 1001 and year like 2003 and student_id like 100001;
Query OK, 1 row affected (0.06 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from marks;													trigger working
+------+------------+------------+-----------+-------------+--------+------+-------+---------------------+---------------------+---------+
| id   | student_id | subject_id | quarterly | half_yearly | annual | year | grade | created_at          | updated_at          | average |
+------+------------+------------+-----------+-------------+--------+------+-------+---------------------+---------------------+---------+
| 1001 |     100001 |          1 |         0 |          79 |     91 | 2003 |     6 | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |      57 | 
| 1002 |     100002 |          1 |        35 |          49 |     77 | 2003 |     6 | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |    NULL |



2. Rename the column name from medal_won to medal_received in the table medals.
Add a column medal_received to the table medals.
Write a trigger to copy the values to both the columns(medal_won and medal_received) whenever any of these columns inserted/updated.
Drop the column medal_won.

ALTER TABLE medals change medal_won medal_recieved VARCHAR(10) DEFAULT NULL;
Query OK, 13 rows affected, 1 warning (1.15 sec)
Records: 13  Duplicates: 0  Warnings: 1

desc medals;
+----------------+-------------+------+-----+---------------------+----------------+
| Field          | Type        | Null | Key | Default             | Extra          |
+----------------+-------------+------+-----+---------------------+----------------+
| id             | bigint(19)  | NO   | PRI | NULL                | auto_increment |
| student_id     | bigint(19)  | NO   | MUL | NULL                |                |
| game_id        | bigint(19)  | NO   |     | NULL                |                |
| medal_recieved | varchar(10) | YES  |     | NULL                |                |
| year           | int(11)     | YES  |     | NULL                |                |
| grade          | int(11)     | YES  |     | NULL                |                |
| created_at     | timestamp   | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at     | timestamp   | NO   |     | 0000-00-00 00:00:00 |                |
+----------------+-------------+------+-----+---------------------+----------------+
8 rows in set (0.00 sec)

ALTER TABLE medals add medal_won VARCHAR(10) DEFAULT NULL;
Query OK, 0 rows affected (0.89 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc medals;
+----------------+-------------+------+-----+---------------------+----------------+
| Field          | Type        | Null | Key | Default             | Extra          |
+----------------+-------------+------+-----+---------------------+----------------+
| id             | bigint(19)  | NO   | PRI | NULL                | auto_increment |
| student_id     | bigint(19)  | NO   | MUL | NULL                |                |
| game_id        | bigint(19)  | NO   |     | NULL                |                |
| medal_recieved | varchar(10) | YES  |     | NULL                |                |
| year           | int(11)     | YES  |     | NULL                |                |
| grade          | int(11)     | YES  |     | NULL                |                |
| created_at     | timestamp   | NO   |     | CURRENT_TIMESTAMP   |                |
| updated_at     | timestamp   | NO   |     | 0000-00-00 00:00:00 |                |
| medal_won      | varchar(10) | YES  |     | NULL                |                |
+----------------+-------------+------+-----+---------------------+----------------+
9 rows in set (0.00 sec)

DELIMITER $$

CREATE TRIGGER medal_trigger_insert before INSERT ON medals 
FOR EACH ROW
BEGIN
IF new.medal_won is null THEN
SET new.medal_won=new.medal_recieved;
ELSE
SET new.medal_recieved=new.medal_won;
END IF;
END $$

CREATE TRIGGER medal_trigger_update before UPDATE ON medals 
FOR EACH ROW
BEGIN
IF new.medal_won is null THEN
SET new.medal_won=new.medal_recieved;
ELSE
SET new.medal_recieved=new.medal_won;
END IF;
END $$

DELIMITER ;

show triggers;
+----------------------+--------+--------+----------------------------------------------------------------------------------------------------------------------------------+--------+---------+------------------------+----------------+----------------------+----------------------+--------------------+
| Trigger              | Event  | Table  | Statement                                                                                                                        | Timing | Created | sql_mode               | Definer        | character_set_client | collation_connection | Database Collation |
+----------------------+--------+--------+----------------------------------------------------------------------------------------------------------------------------------+--------+---------+------------------------+----------------+----------------------+----------------------+--------------------+
| avg_trigger_insert   | INSERT | marks  | BEGIN
SET new.average=(new.annual+new.half_yearly+new.quarterly)/3;
END                                                          | BEFORE | NULL    | NO_ENGINE_SUBSTITUTION | root@localhost | utf8                 | utf8_general_ci      | latin1_swedish_ci  |
| avg_trigger_update   | UPDATE | marks  | BEGIN
SET new.average=(new.annual+new.half_yearly+new.quarterly)/3;
END                                                          | BEFORE | NULL    | NO_ENGINE_SUBSTITUTION | root@localhost | utf8                 | utf8_general_ci      | latin1_swedish_ci  |
| medal_trigger_insert | INSERT | medals | BEGIN
IF new.medal_won is null THEN
SET new.medal_won=new.medal_recieved;
ELSE
SET new.medal_recieved=new.medal_won;
END IF;
END | BEFORE | NULL    | NO_ENGINE_SUBSTITUTION | root@localhost | utf8                 | utf8_general_ci      | latin1_swedish_ci  |
| medal_trigger_update | UPDATE | medals | BEGIN
IF new.medal_won is null THEN
SET new.medal_won=new.medal_recieved;
ELSE
SET new.medal_recieved=new.medal_won;
END IF;
END | BEFORE | NULL    | NO_ENGINE_SUBSTITUTION | root@localhost | utf8                 | utf8_general_ci      | latin1_swedish_ci  |
+----------------------+--------+--------+----------------------------------------------------------------------------------------------------------------------------------+--------+---------+------------------------+----------------+----------------------+----------------------+--------------------+
4 rows in set (0.00 sec)

ALTER TABLE medal
DROP medal_won;












